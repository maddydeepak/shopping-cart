{"version":3,"sources":["logo.svg","components/search-component/Search.js","components/cart-icon-component/ShoppingCart.js","components/header-component/Header.js","components/filter-component/Filter.js","components/shopping-list-component/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","className","type","placeholder","name","Component","ShoppingCart","Header","Filter","min","max","id","ShoppingList","state","dataReceived","shoppingList","this","jsonData","require","setState","items","map","data","src","image","price","actual","display","discount","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,kC,y0ECc5BC,G,6KATP,OACI,yBAAKC,UAAU,UACX,2BAAOC,KAAK,OAAOD,UAAU,cAAcE,YAAY,WACvD,uBAAGF,UAAU,2BAA2BG,KAAK,gB,GALxCC,cCUNC,G,6KARP,OACI,6BACI,uBAAGL,UAAU,yCAAyCG,KAAK,c,GAJhDC,cCcZE,G,6KAVP,OACI,yBAAKN,UAAU,cACX,yBAAKA,UAAU,YAAW,uBAAGA,UAAU,uBAAuBG,KAAK,UACnE,yBAAKH,UAAU,YAAW,kBAAC,EAAD,OAC1B,yBAAKA,UAAU,YAAW,kBAAC,EAAD,Y,GANrBI,cCsBNG,G,6KArBP,OACI,yBAAKP,UAAU,UACX,uCACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,YAAYG,KAAK,UADlC,OAIA,yBAAKH,UAAU,sBACX,uBAAGA,UAAU,YAAYG,KAAK,UADlC,WAKJ,2BAAOF,KAAK,QAAQD,UAAU,2BAA2BQ,IAAI,MAAMC,IAAI,QAAQC,GAAG,iBAClF,oCACA,4BAAQV,UAAU,oCAAlB,c,GAlBKI,cC8CNO,G,wNA3CXC,MAAQ,CACJC,cAAc,EACdC,aAAc,I,kEAId,IAAKC,KAAKH,MAAMC,aAAc,CAC1B,IAAIG,EAAWC,EAAQ,IACvBF,KAAKG,SAAS,CACVJ,aAAcE,EAASG,MACvBN,cAAc,O,+BAMtB,OACI,yBAAKb,UAAU,OAEPe,KAAKH,MAAME,aAAaM,KAAI,SAACC,GACzB,OACI,yBAAKrB,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAAY,yBAAKA,UAAU,WAAWsB,IAAKD,EAAKE,SAC/D,yBAAKvB,UAAU,aAAaqB,EAAKlB,MACjC,yBAAKH,UAAU,aACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,mBAAkB,uBAAGA,UAAU,YAAYG,KAAK,UAAakB,EAAKG,MAAMC,QACvF,yBAAKzB,UAAU,oBAAoBqB,EAAKG,MAAME,SAC9C,yBAAK1B,UAAU,qBAAqBqB,EAAKM,SAAzC,YAIZ,4BAAQ3B,UAAU,mCAAlB,wB,GAnCLI,cCoBZwB,MAhBf,WACE,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,CAAQA,UAAU,eAClB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,2BACb,kBAAC,EAAD,UCLU6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b723fef9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport \"./Search.css\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <input type=\"text\" className=\"search-text\" placeholder=\"Search\"></input>\r\n                <i className=\"fa fa-search search-icon\" name=\"search\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport \"./ShoppingCart.css\";\r\n\r\nclass ShoppingCart extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <i className=\"fa fa-shopping-cart shopping-cart-icon\" name=\"cart\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import React, { Component } from \"react\";\r\nimport Search from \"../search-component/Search\";\r\nimport ShoppingCart from \"../cart-icon-component/ShoppingCart\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row header\">\r\n                <div className=\"col-sm-3\"><i className=\"fa fa-star star-icon\" name=\"star\" /></div>\r\n                <div className=\"col-sm-8\"><Search /></div>\r\n                <div className=\"col-sm-1\"><ShoppingCart /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport \"./Filter.css\";\r\n\r\nclass Filter extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <h3>Filters</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6 start-price\">\r\n                        <i className=\"fa fa-inr\" name=\"rupee\"></i>\r\n                        100\r\n                    </div>\r\n                    <div className=\"col-sm-6 end-price\">\r\n                        <i className=\"fa fa-inr\" name=\"rupee\"></i>\r\n                        100000\r\n                    </div>\r\n                </div>\r\n                <input type=\"range\" className=\"custom-range multi-range\" min=\"100\" max=\"10000\" id=\"customRange2\"></input>\r\n                <p>Price</p>\r\n                <button className=\"btn btn-primary filter-apply-btn\">Apply</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;","import React, { Component } from \"react\";\r\nimport \"./ShoppingList.css\";\r\nimport $ from 'jquery';\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    state = {\r\n        dataReceived: false,\r\n        shoppingList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.dataReceived) {\r\n            var jsonData = require('../../assets/cart.json');\r\n            this.setState({\r\n                shoppingList: jsonData.items,\r\n                dataReceived: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.state.shoppingList.map((data) => {\r\n                        return (\r\n                            <div className=\"col-sm-3 shopping-item\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\"><img className=\"item-img\" src={data.image} /></div>\r\n                                    <div className=\"col-sm-12\">{data.name}</div>\r\n                                    <div className=\"col-sm-12\">\r\n                                        <div className=\"row price-details\">\r\n                                            <div className=\"col-sm-4 actual\"><i className=\"fa fa-inr\" name=\"rupee\"></i>{data.price.actual}</div>\r\n                                            <div className=\"col-sm-4 display\">{data.price.display}</div>\r\n                                            <div className=\"col-sm-4 discount\">{data.discount}% Off</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-primary add-to-cart-btn\">Add to Cart</button>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingList;\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/react-fontawesome/lib/index';\nimport Header from '../src/components/header-component/Header';\nimport Filter from '../src/components/filter-component/Filter';\nimport ShoppingList from '../src/components/shopping-list-component/ShoppingList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header className=\"App-header\" />\n      <div className=\"row\">\n        <div className=\"col-sm-2\">\n          <Filter />\n        </div>\n        <div className=\"col-sm-10 shopping-list\">\n          <ShoppingList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}